#!/bin/sh

set -u

config=$(cat -)
file=$(echo "$config" | jq -r '."source"')
language=$(echo "$config" | jq -r '."natural_language"')

if [ "$language" = "nl" ]; then
  title="Gerenderd"
  empty="Lege oplossing"
  build_fail="Docker build is gefaald"
else
  title="Rendered"
  empty="Empty submission"
  build_fail="Docker build failed"
fi

echo '{"command": "start-judgement"}'
echo "{\"command\": \"start-tab\", \"title\": \"$title\"}"

if [ -s "$file" ]; then
  hadolint --format json "$file" | jq '.[] | .column -= 1 | .command = "annotate-code" | .row = .line - 1 | .text = .message | .type = .level | del(.code, .file, .line, .level, .message)'

  err=$(/kaniko/executor -v error --no-push --no-push-cache -f "$file" 2>&1 > /dev/null)
  if [ $? -ne 0 ]; then
    jq --null-input \
      --arg description "$err" \
    '{"command": "escalate-status", "status": {"enum": "wrong", "human": $description}}'
  fi
else
  echo "{\"command\": \"escalate-status\", \"status\": {\"enum\": \"wrong\", \"human\": \"$empty\"}}"
fi

echo '{"command": "close-tab"}'
echo '{"command": "close-judgement"}'
